{% import_yaml 'consul/defaults.yml' as defaults %}
{% import_yaml 'consul/providermap.yml' as providermap %}
{% set provider = salt['test.provider']('service')|lower %}
{% set base_url = 'https://releases.hashicorp.com' %}

{# set service information based on provider #}

{% if provider == 'debian_service' %}
  {% do salt['slsutil.update'](defaults, providermap.debian_service) %}
{% elif provider == 'rh_service' %}
  {% do salt['slsutil.update'](defaults, providermap.rh_service) %}
{% elif provider == 'systemd' %}
  {% do salt['slsutil.update'](defaults, providermap.systemd) %}
{% elif provider == 'upstart' %}
  {% do salt['slsutil.update'](defaults, providermap.upstart) %}
{% endif %}


{# set osarch for use with producing download links #}
{% if salt['grains.get']('osarch') == 'amd64' or salt['grains.get']('osarch') == 'x86_64' %}
  {% set osarch = 'amd64' %}
{% else %}
  { set osarch = 'salt['grains.get']('osarch') %}
{% endif %}


{#---------- Begin Agent Config ----------#}


{% set agent_settings = salt['pillar.get']('consul:lookup:agent', default=defaults.agent, merge=True) %}
{% set agent_pkg_name = 'consul_' ~ agent_settings.pkg.version ~ '_' ~ salt['grains.get']('kernel')|lower ~ '_' ~ osarch  ~ '.zip' %}
{% set agent_hashes = 'consul_' ~ agent_settings.pkg.version ~ '_SHA256SUMS' %}
{% set tmp_scripts = [] %}

{% set tmp_agent_settings = {
  'data_dir': defaults.agent.config.data_dir,
  'ssl': agent_settings.ssl,
  'pkg': {
     'name': agent_pkg_name,
     'uri': base_url ~ '/consul/' ~ agent_settings.pkg.version ~ '/' ~ agent_pkg_name,
     'hash': base_url ~ '/consul/' ~ agent_settings.pkg.version ~ '/' ~ agent_hashes
  }
} %}

{% if agent_settings.opts['data-dir'] is defined %}
  {% do tmp_agent_settings.update({ 'data_dir' : agent_settings.opts['data-dir'][0] }) %}
{% endif %}

{% for script in agent_settings.scripts %}
  {% if 'name' not in script %}
    {% set tmp_script = script %}
    {% do salt['slsutil.update'](tmp_script, { 'name': salt['file.basename'](script.source) }) %}
    {% do tmp_scripts.append(tmp_script) %}
  {% else %}
    {% do tmp_scripts.append(script) %}
  {% endif %}
{% endfor %}

{% do salt['slsutil.update'](tmp_agent_settings, { 'scripts': tmp_scripts }) %}

{% if agent_settings.ssl.ca.source is not none and agent_settings.ssl.ca.name is none %}
  {% do salt['slsutil.update'](tmp_agent_settings, { 'ssl': { 'ca': { 'name': salt['file.basename'](agent_settings.ssl.ca.source) } } }) %}
{% endif %}

{% if agent_settings.ssl.cert.source is not none and agent_settings.ssl.cert.name is none  %}
  {% do salt['slsutil.update'](tmp_agent_settings, { 'ssl': { 'cert': { 'name': salt['file.basename'](agent_settings.ssl.cert.source) } } }) %}
{% endif %}


{% if agent_settings.ssl.key.source is not none and agent_settings.ssl.key.name is none %}
  {% do salt['slsutil.update'](tmp_agent_settings, { 'ssl': { 'key': { 'name': salt['file.basename'](agent_settings.ssl.key.source) } } }) %}
{% endif %}


{# Ensures logging is disabled on system or if no path is defined #}
{% if provider == 'systemd' or agent_settings.log_dir is none %}
  {% do tmp_agent_settings.update({ 'log': False }) %}
{% endif %}


{% do salt['slsutil.update'](agent_settings, tmp_agent_settings) %}


{#---------- End Agent Config ----------#}
{#---------- Begin Template Config ----------#}

{% set template_settings = salt['pillar.get']('consul:lookup:template', default=defaults.template, merge=True) %}
{% set template_pkg_name = 'consul-template_' ~ template_settings.pkg.version ~ '_' ~ salt['grains.get']('kernel')|lower ~ '_' ~ osarch  ~ '.zip' %}
{% set template_pkg_hash = 'consul-template_' ~ template_settings.pkg.version ~ '_SHA256SUMS' %}
{% set tmp_templates = [] %}

{% set tmp_template_settings = {
    'templates': template_settings.templates,
    'ssl': {},
    'pkg': {
      'name': template_pkg_name,
      'uri' : base_url ~ '/consul-template/' ~ template_settings.pkg.version ~ '/' ~ template_pkg_name,
      'hash': base_url ~ '/consul-template/' ~ template_settings.pkg.version ~ '/' ~ template_pkg_hash
    }
} %}


{% for tmplt in template_settings.templates %}
  {% if 'name' not in tmplt %}
    {% set tmp_tmplt = tmplt %}
    {% do salt['slsutil.update'](tmp_tmplt, { 'name': salt['file.basename'](tmplt.source) }) %}

    {% if 'source' not in tmp_tmplt.config %}
      {% do salt['slsutil.update'](tmp_tmplt, { 'config': { 'source': salt['file.join'](template_settings.templates_dir, tmp_tmplt.name) }}) %}
    {% endif %}

    {% do tmp_templates.append(tmp_tmplt) %}
  {% else %}
    {% if 'source' not in tmplt.config %}
      {% set tmp_tmplt = tmplt %}
      {% do salt['slsutil.update'](tmp_tmplt, { 'config': { 'source': salt['file.join'](template_settings.templates_dir, tmp_tmplt.name) }}) %}
      {% do tmp_templates.append(tmp_tmplt) %}
    {% else %}
      {% do tmp_templates.append(tmplt) %}
    {% endif %}
  {% endif %}
{% endfor %}

{% do salt['slsutil.update'](tmp_template_settings, { 'templates': tmp_templates }) %}


{% if template_settings.ssl.ca.source is not none and template_settings.ssl.ca.name is none %}
  {% do salt['slsutil.update'](tmp_template_settings, { 'ssl': { 'ca': { 'name': salt['file.basename'](template_settings.ssl.ca.source) } } }) %}
{% endif %}

{% if template_settings.ssl.cert.source is not none and template_settings.ssl.cert.name is none  %}
  {% do salt['slsutil.update'](tmp_template_settings, { 'ssl': { 'cert': { 'name': salt['file.basename'](template_settings.ssl.cert.source) } } }) %}
{% endif %}


{% if template_settings.ssl.key.source is not none and template_settings.ssl.key.name is none %}
  {% do salt['slsutil.update'](tmp_template_settings, { 'ssl': { 'key': { 'name': salt['file.basename'](template_settings.ssl.key.source) } } }) %}
{% endif %}


{# Ensures logging is disabled on system or if no path is defined #}
{% if provider == 'systemd' or template_settings.log_dir is none %}
  {% do tmp_template_settings.update({ 'log': False }) %}
{% endif %}


{% do salt['slsutil.update'](template_settings, tmp_template_settings) %}


{#---------- End Template Config ----------#}
